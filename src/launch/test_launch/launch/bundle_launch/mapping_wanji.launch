<launch>
 <param name="robot_description" textfile="$(find test_launch)/urdf/igk.xacro" />
 <param name="/use_sim_time" value="true" />
 <!-- 3D cartographer -->
	<!-- <node name="cartographer_node" pkg="cartographer_ros"
      type="cartographer_node" args="
          -configuration_directory $(find test_launch)/lua
          -configuration_basename 3d_tracking.lua
          -load_state_filename $(find test_launch)/map/up_vlp.pbstream"
      output="screen">
		<remap from="/points2" to="/rslidar_points" />
	</node> -->
	<!-- <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="lidar_filter_front">
		<remap from="/scan" to="/scan_blue" />
		<remap from="/scan_filtered" to="/scan" />
		<rosparam command="load" file="$(find test_launch)/params/scan/front_lidar_config.yaml" />
	</node> -->
 <!-- cartographer -->   
	<node name="cartographer_node" pkg="cartographer_ros"
		type="cartographer_node" args="
			-configuration_directory $(find test_launch)/lua
			-configuration_basename mapping.lua"
		output="screen">
		<remap from="/points2" to="/wanji_point" />
	</node>

	<node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" 
		type="cartographer_occupancy_grid_node" args="
			-resolution 0.05
			--noinclude_unfrozen_submaps" 
		output="screen">
	</node>
	
	<!-- <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
	<param name="destination_frame" value="base_link"/>
	<param name="cloud_destination_topic" value="/merged_cloud"/>
	<param name="scan_destination_topic" value="/scan"/>
	<param name="laserscan_topics" value ="/scan_1 /scan_2" /> 
	</node> -->


	<!-- <node pkg="cartographer_initialpose" type="cartographer_initialpose" name="cartographer_initialpose" >
		<param name="configuration_directory" value="$(find test_launch)/lua" />
		<param name="configuration_basename" value="second_generation_location.lua" />
	</node>	
     -->
<!-- <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.05" /> -->
 <node name="robot_state_pblisher" pkg="robot_state_publisher" type="robot_state_publisher" />   
<node name="rviz" pkg="rviz" type="rviz" args="-d $(find test_launch)/rviz/mapping.rviz" />
</launch>
